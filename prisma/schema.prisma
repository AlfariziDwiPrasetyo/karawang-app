// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Banner {
   id        Int      @id @default(autoincrement())
   url       String
   createdAt DateTime @default(now()) @db.Timestamp(6)
   updatedAt DateTime @updatedAt
}

model Gallery {
   id        Int      @id @default(autoincrement())
   url       String
   createdAt DateTime @default(now()) @db.Timestamp(6)
   updatedAt DateTime @updatedAt
}
 

model Post {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt
  content   String?
  published Boolean  @default(false)
  Comment Comment[]
  authorId  Int
  User      User     @relation(fields: [authorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Menu {
   id        Int      @id @default(autoincrement())
   menu  String   @db.VarChar(255)
   name     String   @db.VarChar(255)
   slug  String @db.VarChar(255)
   content   String
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt
}

// model Profile {
//   id     Int     @id @default(autoincrement())
//   bio    String? 
//   userId Int     @unique
//   User   User    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
// }

model Comment {
  id      Int      @id @default(autoincrement())
  content String
  user String? @db.VarChar(255)
  postId Int
  Post Post @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt

}

model User {
  id      Int      @id @default(autoincrement())
  username  String  @db.VarChar(255)
  email   String   @unique @db.VarChar(255)
  password String  @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt
  Post    Post[]

  // Profile Profile?
}